name: Docker CI/CD for .NET

on:
  push:
    branches:
      - DevOps

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0

      - name: Clean and restore dependencies
        run: |
          dotnet clean
          dotnet restore

      - name: Build project
        run: dotnet build --configuration Release

      - name: Publish application
        run: dotnet publish -c Release -o out

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/pizza4ps-customer-service:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/pizza4ps-customer-service:v${{ github.run_number }}

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy application
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          cd /WorkFolder/Docker-Compose/API
          docker-compose down
          docker-compose pull
          docker-compose up -d
          EOF
